import telebot
from telebot import types
import psycopg2

token = '6741751858:AAHPRaRZFuRFetyeVpI04aAH6vQEaaiDguc'
bot = telebot.TeleBot(token)
data = ['—Å–ø–∞—Å–∏–±–æ', '–ø—Ä–∏–≤–µ—Ç', '—Å–µ—Å—Å–∏—è']
db = psycopg2.connect(database="polytech_db", user="postgres", password="VArth123")
cur = db.cursor()


@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row("–•–æ—á—É", "/help", "/timetable")
    bot.send_message(message.chat.id,
                     '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Å–≤–µ–∂—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ú–æ—Å–ø–æ–ª–∏—Ç–µ—Ö –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏?',
                     reply_markup=keyboard)


@bot.message_handler(commands=['help'])
def start_message(message):
    bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –±–æ—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º\n'
                                      '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                                      '/start - –≤—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n'
                                      '/lms_polytech - —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –ú–æ—Å–ø–æ–ª–∏—Ç–µ—Ö–∞ c –∫—É—Ä—Å–∞–º–∏\n'
                                      '/timetable - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏')


@bot.message_handler(func=lambda message: message.text == "–•–æ—á—É")
def answer(message):
    bot.send_message(message.chat.id, '–¢–æ–≥–¥–∞ —Ç–µ–±–µ —Å—é–¥–∞: https://mospolytech.ru/')


@bot.message_handler(commands=['lms_polytech'])
def url(message):
    bot.reply_to(message, "–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –°–î–û –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ø–æ–ª–∏—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞:\n"
                          "https://online.mospolytech.ru/")


@bot.message_handler(commands=['timetable'])
def pari(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫üìÜ", "–í—Ç–æ—Ä–Ω–∏–∫üìÜ", "–°—Ä–µ–¥–∞üìÜ")
    keyboard.row("–ß–µ—Ç–≤–µ—Ä–≥üìÜ", "–ü—è—Ç–Ω–∏—Ü–∞üìÜ", "–°—É–±–±–æ—Ç–∞üìÜ")
    keyboard.row("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—éüóì")
    bot.reply_to(message, "–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?", reply_markup=keyboard)


@bot.message_handler(func=lambda message: message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—éüóì")
def week(message):
    # –ó–¥–µ—Å—å –≤—ã –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    request = 'SELECT a.day_of_week, name, room_num, start_time, full_name FROM timetable a JOIN subject b ON a.subject_id = b.subject_id JOIN teacher c ON b.subject_id = c.subject_id'
    cur.execute(request)  # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
    abv = cur.fetchall()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if len(abv) > 0:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        abv_text = ""
        for i in abv:
            # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ i[0] - —ç—Ç–æ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, i[1] - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞, –∏ —Ç.–¥.
            if i[0] not in abv_text:
                abv_text += f"\n*{i[0]}*üìÜ:\n"  # –î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
            abv_text += f"_{i[1]}_ \n {i[2]}\n üïò{i[3]} \nüë§{i[4]}\n\n"
        bot.send_message(message.chat.id, abv_text, parse_mode='Markdown')
    else:
        bot.send_message(message.chat.id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')


@bot.message_handler(
    func=lambda message: message.text in ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫üìÜ", "–í—Ç–æ—Ä–Ω–∏–∫üìÜ", "–°—Ä–µ–¥–∞üìÜ", "–ß–µ—Ç–≤–µ—Ä–≥üìÜ", "–ü—è—Ç–Ω–∏—Ü–∞üìÜ", "–°—É–±–±–æ—Ç–∞üìÜ"])
def den(message):
    day = message.text.strip("üìÜ")  # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    # –í–∫–ª—é—á–∞–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –≤ –∑–∞–ø—Ä–æ—Å SQL, –∏—Å–ø–æ–ª—å–∑—É—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è SQL –∏–Ω—ä–µ–∫—Ü–∏–π
    request = ('SELECT a.day_of_week, b.name, a.room_num, a.start_time, c.full_name '
               'FROM timetable a '
               'JOIN subject b ON a.subject_id = b.subject_id '
               'JOIN teacher c ON b.subject_id = c.subject_id '
               'WHERE a.day_of_week = %s')  # %s –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π day
    cur.execute(request, (day,))  # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Å –¥–Ω–µ–º –Ω–µ–¥–µ–ª–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
    abv = cur.fetchall()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if len(abv) > 0:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        abv_text = f"*{day}*üìÜ:\n\n"
        for i in abv:
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –∑–∞–Ω—è—Ç–∏–∏
            subject = i[1]
            room_num = i[2]
            start_time = i[3]
            full_name = i[4]
            abv_text += f"_{subject}_\n {room_num}\n üïò{start_time} \nüë§{full_name} \n\n"
        bot.send_message(message.chat.id, abv_text, parse_mode='Markdown')
    else:
        bot.send_message(message.chat.id, "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç")


@bot.message_handler(content_types=['text'])
def pechat(message):
    if message.text.lower() == data[0]:
        bot.send_message(message.chat.id, '–†–∞–¥ –±—ã–ª –≤–∞–º –ø–æ–º–æ—á—å!')
    elif message.text.lower() == data[1]:
        bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ' + message.from_user.first_name + ', –æ –∫–æ–º–∞–Ω–¥–∞—Ö /help')
    elif message.text.lower() == data[2]:
        bot.send_message(message.chat.id,
                         '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ —Å–µ—Å—Å–∏–∏ –µ—â–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –°–∫–æ—Ä–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—Å–µ —Å–¥–µ–ª–∞–µ–º')
    else:
        bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –í–∞—Å –Ω–µ –ø–æ–Ω—è–ª.')


bot.polling()
